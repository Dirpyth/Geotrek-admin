language: python

python:
  - "2.7"

env:
  - ACTION=test
  - ACTION=deploy
  - ACTION=integration
  - ACTION=codestyle

stages:
  - test
  - test_nds

matrix:
  allow_failures:
    - env: ACTION=integration

cache:
  - apt

dist: trusty
sudo: required

before_install:
  - sudo apt-get update -qq
  # Make sure to use postgresql and postgis version from main Ubuntu repository
  - sudo rm -f /etc/apt/sources.list.d/pgdg.list
  - sudo apt-get remove -qq postgis* postgresql*
  # Make sure to use our version of phantomjs
  - sudo rm -rf /usr/local/bin/phantomjs* /usr/bin/phantomjs* /usr/local/phantomjs*
  # Make sure nginx has access to static files
  - sudo chmod a+x /home/travis

install:
  - if [[ $ACTION != codestyle ]]; then deactivate; fi
  - if [[ $ACTION == codestyle ]]; then pip install flake8; fi
  - if [[ $ACTION == deploy || $ACTION == integration ]]; then ./install.sh --noinput; fi
  #Â Don't bind redis-server on IPv6 address
  - sudo sed -i 's/^bind.*$/bind 127.0.0.1/' /etc/redis/redis.conf; sudo service redis-server restart;
script:
  - if [[ $ACTION == codestyle ]]; then flake8 --exclude "" --ignore=E501,F403,F405 geotrek/settings; fi
  - if [[ $ACTION == codestyle ]]; then flake8 geotrek; fi
  - if [[ $ACTION == codestyle ]]; then find geotrek/*/migrations/*.py | xargs grep -l srid | xargs grep -L SRID; fi
  - if [[ $ACTION == deploy || $ACTION == integration ]]; then make load_demo; fi
  - if [[ $ACTION == deploy ]]; then make test_nav host=localhost port=80; fi
  - if [[ $ACTION == integration ]]; then make test_export host=localhost port=80; fi

after_failure:
  - cat var/log/geotrek.log
  - sudo cat /var/log/nginx/geotrek_access.log
  - sudo cat /var/log/nginx/geotrek_error.log
  - cat /var/log/supervisord.log
  - cat /var/log/geotrek.log

#TODO: Create parallel coverage test test_nds

jobs:
  include:
    - stage: test

      env: ACTION=test

      install:
        - ./install.sh --tests --noinput;

      before_script: skip

      script:
        - ./bin/coverage run ./bin/django test geotrek;
        - make test_js;

      after_success:
        - bash <(curl -s https://codecov.io/bash) -cF python;

    - stage: test_nds

      env: ACTION=test

      install:
        - sed -i 's/TREKKING_TOPOLOGY_ENABLED = True/TREKKING_TOPOLOGY_ENABLED = False/g' geotrek/settings/base.py;
        - ./install.sh --tests --noinput;

      before_script: skip

      script:
        - ./bin/coverage run ./bin/django test geotrek --settings=geotrek.settings.tests_nds;
        - make test_js;

      after_success:
        - bash <(curl -s https://codecov.io/bash) -cF python;
